{"version":3,"sources":["firebase/firebaseConfig.js","helpers/fileUpload.js","helpers/loadNotes.js","types/types.js","actions/notes.js","hooks/useForm.js","components/notes/NotesAppBar.js","components/notes/NoteScreen.js","components/journal/NothingSelected.js","actions/ui.js","actions/auth.js","components/journal/JournalEntry.js","components/journal/JournalEntries.js","components/journal/Sidebar.js","components/journal/JournalScreen.js","components/auth/LoginScreen.js","components/auth/RegisterScreen.js","routers/AuthRouter.js","routers/PrivateRoute.js","routers/PublicRoute.js","routers/AppRouter.js","reducers/notesReducer.js","reducers/uiReducer.js","store/store.js","reducers/authReducer.js","JournalApp.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","firestore","googleAuthProvider","auth","GoogleAuthProvider","fileUpload","file","a","formData","FormData","append","fetch","method","body","resp","ok","json","cloudResp","secure_url","loadNotes","uid","collection","get","notesSnap","notes","forEach","snapHijo","push","id","data","types","activeNote","note","type","payload","addNewNote","starLoadingNotes","dispatch","setNotes","startSaveNote","getState","url","noteToFireStore","doc","update","refreshNote","Swal","fire","title","deleteNote","useForm","initialState","useState","values","setValues","reset","newFormState","handleInputChange","target","name","value","NotesAppBar","useDispatch","active","useSelector","state","className","style","display","onChange","e","files","text","allowOutsideClick","showConfirmButton","willOpen","showLoading","fileUrl","close","startUpoading","onClick","document","querySelector","click","NoteScreen","formValues","activeId","useRef","activeUrl","useEffect","current","placeholder","autoComplete","src","alt","delete","startDeleting","NothingSelected","setError","err","uiFinishLoading","startLoginEmailPassword","email","password","signInWithEmailAndPassword","then","user","login","displayName","catch","message","logout","JournalEntry","date","noteDate","moment","backgroundSize","backgroundImage","format","JournalEntries","map","Sidebar","signOut","newNote","Date","getTime","add","JournalScreen","LoginScreen","loading","ui","onSubmit","preventDefault","disabled","signInWithPopup","to","RegisterScreen","msgError","password2","isFormValid","trim","length","validator","isEmail","createUserWithEmailAndPassword","updateProfile","startRegisterWithEmailPasswordName","AuthRouter","path","component","PrivateRoute","isLoggedIn","Component","rest","props","PublicRoute","AppRouter","checking","setChecking","setIsLoggedIn","onAuthStateChanged","exact","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","action","filter","store","createStore","applyMiddleware","thunk","JournalApp","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.661024fe.chunk.js","sourcesContent":["import firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyBSwhAhBuhg6dZ5g6YJ7iK0-a40Vq6V-Xg\",\r\n    authDomain: \"react-apps-9a047.firebaseapp.com\",\r\n    projectId: \"react-apps-9a047\",\r\n    storageBucket: \"react-apps-9a047.appspot.com\",\r\n    messagingSenderId: \"390529761180\",\r\n    appId: \"1:390529761180:web:6476defba1c5dfb9a9d259\"\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nconst db = firebase.firestore()\r\nconst googleAuthProvider = new firebase.auth.GoogleAuthProvider()\r\n\r\n\r\nexport {\r\n    db,\r\n    googleAuthProvider,\r\n    firebase\r\n}","export const fileUpload = async (file) => {\r\n    \r\n    const cloudUrl = 'https://api.cloudinary.com/v1_1/dqatninnv/image/upload'\r\n    const formData = new FormData()\r\n    formData.append('upload_preset','react-journal')\r\n    formData.append('file',file)\r\n\r\n    try {\r\n        \r\n        const resp = await fetch(cloudUrl,{\r\n            method: 'POST',\r\n            body: formData\r\n        })\r\n        if(resp.ok){\r\n            const cloudResp = await resp.json()\r\n            return cloudResp.secure_url\r\n        }else{\r\n            throw await resp.json()\r\n        }\r\n\r\n    } catch (error) {\r\n        throw error\r\n    }\r\n\r\n\r\n\r\n}","import { db } from \"../firebase/firebaseConfig\"\r\n\r\n\r\n\r\nexport const loadNotes = async (uid) =>{\r\n    const notesSnap = await db.collection(`${uid}/journal/notes`).get()\r\n    const notes = []\r\n\r\n    notesSnap.forEach(snapHijo =>{\r\n        notes.push({\r\n            id: snapHijo.id,\r\n            ...snapHijo.data()\r\n        })\r\n    })\r\n    return notes\r\n}","export const types ={\r\n\r\n    login:'[Auth] Login',\r\n    logout:'[Auth] Logout',\r\n\r\n    uiSetError:'[UI] Set error',\r\n    uiRemoveError:'[UI] Remove error',\r\n\r\n    uiStartLoading: '[UI] Start loading',\r\n    uiFinishLoading: '[UI] Finish loading',\r\n\r\n    notesAddNew: '[Notes] New note',\r\n    notesActive: '[Notes] Set active note',\r\n    notesLoad: '[Notes] Load note',\r\n    notesUpdated: '[Notes] Update note',\r\n    notesFileUrl: '[Notes] Update image url',\r\n    notesDelete: '[Notes] Delete note',\r\n    notesLogoutCleaning: '[Notes] Logout Cleaning',\r\n}\r\n","import Swal from \"sweetalert2\"\r\nimport { db } from \"../firebase/firebaseConfig\"\r\nimport { fileUpload } from \"../helpers/fileUpload\"\r\nimport { loadNotes } from \"../helpers/loadNotes\"\r\nimport { types } from \"../types/types\"\r\n\r\n//react-journal\r\n\r\nexport const startNewNote = () => {\r\n    return async(dispatch, getState) => {\r\n    \r\n        const {uid} = getState().auth\r\n\r\n        const newNote = {\r\n            title: '',\r\n            body: '',\r\n            date: new Date().getTime(),\r\n            \r\n        }\r\n\r\n        const doc = await db.collection(`${ uid}/journal/notes`).add(newNote)\r\n        \r\n        dispatch(activeNote(doc.id,newNote))\r\n        dispatch(addNewNote(doc.id,newNote))\r\n        \r\n    }\r\n}\r\n\r\nexport const activeNote = (id, note) =>({\r\n    type: types.notesActive,\r\n    payload: {\r\n        id,\r\n        ...note,\r\n    }\r\n})\r\n\r\nexport const addNewNote = (id,note) => ({\r\n    type: types.notesAddNew,\r\n    payload: {\r\n        id,\r\n        ...note\r\n    }\r\n})\r\nexport const starLoadingNotes = (uid) => {\r\n    return async (dispatch) => {\r\n        const notes = await loadNotes(uid)\r\n        dispatch(setNotes(notes))    \r\n    }\r\n}\r\nexport const setNotes = (notes) =>( {\r\n    type : types.notesLoad,\r\n    payload: notes,\r\n})\r\n\r\nexport const startSaveNote = (note) =>{\r\n    return async (dispatch, getState) => {\r\n        \r\n        const {uid} = getState().auth\r\n        if (!note.url){\r\n            delete note.url\r\n        }\r\n        const noteToFireStore = {...note}\r\n        delete noteToFireStore.id\r\n\r\n        await db.doc(`${uid}/journal/notes/${note.id}`).update(noteToFireStore)\r\n\r\n        dispatch(refreshNote(note.id, noteToFireStore))\r\n        Swal.fire('Saved', note.title, 'success')\r\n    }\r\n}\r\n\r\nexport const refreshNote = (id, note) => ({\r\n    type: types.notesUpdated,\r\n    payload: {\r\n        id,\r\n        note: {\r\n            id,\r\n            ...note\r\n        }\r\n    }\r\n})\r\n\r\nexport const startUpoading = (file) => {\r\n    return async (dispatch, getState)=>{\r\n        const activeNote = getState().notes.active\r\n\r\n        Swal.fire({\r\n            title: 'Uploading...',\r\n            text: 'Please wait...',\r\n            allowOutsideClick: false,\r\n            showConfirmButton: false,\r\n            willOpen: () => {\r\n                Swal.showLoading();\r\n            }\r\n        });\r\n\r\n        const fileUrl = await fileUpload(file)\r\n        activeNote.url = fileUrl\r\n\r\n        dispatch(startSaveNote(activeNote))\r\n\r\n        Swal.close()\r\n\r\n    }\r\n}\r\n\r\nexport const startDeleting = (id) => {\r\n    return async (dispatch,getState) => {\r\n        const uid = getState().auth.uid\r\n        await db.doc(`${uid}/journal/notes/${id}`).delete()\r\n\r\n        dispatch(deleteNote(id));\r\n    }\r\n}\r\n\r\nexport const deleteNote = (id) => ({\r\n    type: types.notesDelete,\r\n    payload: id\r\n})\r\n\r\n\r\nexport const noteLogout = () => ({\r\n    type: types.notesLogoutCleaning\r\n})","import { useState } from \"react\"\r\n\r\nexport const useForm = (initialState = {}) => {\r\n    const [values, setValues] = useState(initialState)\r\n    \r\n    const reset = (newFormState = initialState)=>{\r\n        setValues(newFormState)\r\n    }\r\n\r\n    const handleInputChange = ({target}) =>{\r\n        setValues({\r\n            ...values,\r\n            [target.name]: target.value\r\n        })\r\n    }\r\n\r\n    return[values,handleInputChange,reset]\r\n}\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startSaveNote, startUpoading } from '../../actions/notes'\r\n\r\nexport const NotesAppBar = () => {\r\n    const dispatch = useDispatch()\r\n    const { active } = useSelector(state => state.notes)\r\n\r\n    const handleSave = () => {\r\n        dispatch(startSaveNote(active))\r\n    }\r\n    const handlePïctureClick = () => {\r\n        document.querySelector('#fileSelector').click()\r\n    }\r\n    const handleFileChange = (e) =>{\r\n        const file = e.target.files[0]\r\n        if(file){\r\n            dispatch( startUpoading(file) )\r\n        }   \r\n    }\r\n\r\n    return (\r\n        <div className='notes__appbar'>\r\n            <span>28 de agosto 2020</span>\r\n\r\n            <input\r\n                id = 'fileSelector'\r\n                type = 'file'\r\n                name = 'file'\r\n                style = {{display: 'none'}}\r\n                onChange = {handleFileChange}\r\n            />\r\n\r\n            <div>\r\n                <button className='btn'\r\n                    onClick={handlePïctureClick}\r\n                >\r\n                    Picture\r\n                </button>\r\n                \r\n                <button \r\n                    className='btn'\r\n                    onClick = {handleSave}\r\n                >\r\n                    Save\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useRef } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { activeNote, startDeleting } from '../../actions/notes'\r\nimport { useForm } from '../../hooks/useForm'\r\nimport { NotesAppBar } from './NotesAppBar'\r\n\r\nexport const NoteScreen = () => {\r\n\r\n    const {active: note} = useSelector(state => state.notes)\r\n    const dispatch = useDispatch()\r\n\r\n    const [formValues, handleInputChange, reset] = useForm(note)\r\n\r\n    const activeId = useRef(note.id)\r\n    const activeUrl = useRef(note.url)\r\n\r\n    const {body,title,id} = formValues\r\n\r\n    useEffect(() => {\r\n        if (note.id !== activeId.current){\r\n            reset(note)\r\n            activeId.current = note.id\r\n        }\r\n        if(note.url !== activeUrl.current){\r\n            reset(note)\r\n            activeUrl.current = note.url\r\n        }\r\n    }, [note,reset])\r\n\r\n    useEffect(() => {\r\n        dispatch(activeNote(formValues.id,{...formValues}))\r\n    }, [formValues, dispatch])\r\n\r\n    const handleDelete = () => {\r\n        dispatch(startDeleting(id))\r\n    }\r\n\r\n\r\n    return (\r\n        <div className='notes__main-content'>\r\n            <NotesAppBar />\r\n\r\n            <div className='notes__content'>\r\n                <input \r\n                    type ='text'\r\n                    placeholder='Some awesome title'\r\n                    className ='notes__title-input'\r\n                    autoComplete='off'\r\n                    name = 'title'\r\n                    value = {title}\r\n                    onChange = {handleInputChange}\r\n                />\r\n                <textarea\r\n                    placeholder='What happend today'\r\n                    className='notes__textarea'\r\n                    name = 'body'\r\n                    value = {body}\r\n                    onChange = {handleInputChange}\r\n                ></textarea>\r\n                {\r\n                    note.url && \r\n                    <div className='notes__image'>\r\n                        <img\r\n                            src= {note.url}\r\n                            alt='imagen'\r\n                        />\r\n                    </div>}\r\n            </div>\r\n\r\n            <button \r\n                className = 'btn btn-danger'\r\n                onClick = {handleDelete}\r\n            > Delete </button>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const NothingSelected = () => {\r\n    return (\r\n        <div className='nothing__main-content'>\r\n            <p>\r\n                Selected Something\r\n                <br/>\r\n                pr create an entry!\r\n            </p>\r\n            <i className='far fa-star fa-4x mt-5'></i>\r\n        </div>\r\n    )\r\n}\r\n","import { types } from \"../types/types\"\r\n\r\n\r\nexport const setError = (err) =>({\r\n    type: types.uiSetError,\r\n    payload: err,\r\n})\r\n\r\nexport const removeError = () =>({\r\n    type: types.uiRemoveError,\r\n})\r\n\r\nexport const uiStartLoading = () =>({\r\n    type: types.uiStartLoading,\r\n})\r\n\r\nexport const uiFinishLoading = () =>({\r\n    type: types.uiFinishLoading,\r\n})\r\n","import { types } from \"../types/types\"\r\nimport {firebase, googleAuthProvider} from '../firebase/firebaseConfig'\r\nimport { uiFinishLoading, uiStartLoading } from \"./ui\"\r\nimport Swal from 'sweetalert2'\r\nimport { noteLogout } from \"./notes\"\r\n\r\nexport const startLoginEmailPassword = (email,password) =>{\r\n    return (dispatch) => {\r\n        dispatch(uiStartLoading())\r\n\r\n        firebase.auth().signInWithEmailAndPassword(email,password)\r\n            .then(async({user}) =>{\r\n                dispatch(\r\n                    login(user.uid, user.displayName)\r\n                )\r\n                \r\n                dispatch(uiFinishLoading())\r\n\r\n            }).catch( e => {\r\n                dispatch(uiFinishLoading())\r\n                Swal.fire('Error', e.message, 'error')\r\n            })\r\n    }\r\n}\r\nexport const startRegisterWithEmailPasswordName = (email,password,name) =>{\r\n    return (dispatch) => {\r\n        firebase.auth().createUserWithEmailAndPassword(email,password)\r\n        .then(async({user}) => {\r\n            await user.updateProfile({displayName:name})\r\n            dispatch(\r\n                login(user.uid, user.displayName)\r\n            )\r\n        })\r\n        .catch( e => {\r\n            Swal.fire('Error', e.message, 'error')\r\n        })\r\n    }\r\n}\r\n\r\nexport const startGoogleLogin = () =>{\r\n    return (dispatch) => {\r\n        firebase.auth().signInWithPopup(googleAuthProvider)\r\n            .then(({user}) => {\r\n                dispatch(\r\n                    login(user.uid, user.displayName)\r\n                )\r\n            })\r\n    }\r\n}\r\n\r\nexport const login = (uid,displayName) =>{\r\n    return {\r\n        type: types.login,\r\n        payload:{\r\n            uid,\r\n            displayName\r\n        }\r\n    }\r\n}\r\n\r\nexport const startLogout = () =>{\r\n    return async(dispatch) => {\r\n        await firebase.auth().signOut()\r\n\r\n        dispatch(logout())\r\n        dispatch(noteLogout())\r\n    }\r\n}\r\nexport const logout = () => ({\r\n    type: types.logout\r\n})","import React from 'react'\r\nimport moment from 'moment'\r\nimport { activeNote } from '../../actions/notes'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nexport const JournalEntry = ({id,date,title,body,url}) => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const noteDate = moment(date)\r\n\r\n    const handleEntryClick = () =>{\r\n        dispatch(\r\n            activeNote(id,{\r\n                date, title, body, url\r\n            })\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div \r\n            className='journal__entry pointer'\r\n            onClick = {handleEntryClick}        \r\n        >\r\n            {\r\n                url && \r\n                (<div className='journal__entry-picture' \r\n                style = {{\r\n                    backgroundSize: 'cover',\r\n                    backgroundImage: `url(${url})`\r\n                }}/>) \r\n            }\r\n            <div className='journal__entry-body'>\r\n                <p className='journal__entry-title'>\r\n                    {title}\r\n                </p>\r\n                <p className='journal__entry-content'>\r\n                    {body}\r\n                </p>\r\n            </div>\r\n            <div className='journal__entry-date-box'>\r\n                <span>{noteDate.format('dddd')}</span>\r\n                <h4>{noteDate.format('d')}</h4>\r\n            </div>    \r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { JournalEntry } from './JournalEntry'\r\n\r\nexport const JournalEntries = () => {\r\n\r\n    const {notes} = useSelector(state => state.notes)\r\n\r\n\r\n    return (\r\n        <div className='journal__entries'>\r\n            {\r\n                notes.map(note=>(\r\n                    <JournalEntry \r\n                        key={note.id}\r\n                        { ...note }\r\n                    />\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startLogout } from '../../actions/auth'\r\nimport { startNewNote } from '../../actions/notes'\r\nimport { JournalEntries } from './JournalEntries'\r\n\r\nexport const Sidebar = () => {\r\n\r\n    const name = useSelector(state => state.auth.name)\r\n    const dispatch = useDispatch()\r\n\r\n    const handleLogout = () =>{\r\n        dispatch(startLogout())\r\n    }\r\n    \r\n    const handleAddNew = () =>{\r\n        dispatch(startNewNote())\r\n    }\r\n\r\n    return (\r\n        <aside className='journal__sidebar'>\r\n            <div className =  'journal__sidebar-navbar'>\r\n                <h3 className='mt-5'>\r\n                    <i className = 'far fa-moon'></i>\r\n                    <span>\r\n                        {name}\r\n                    </span>\r\n                </h3>\r\n\r\n                <button \r\n                    className='btn'\r\n                    onClick = {handleLogout}\r\n                >\r\n                    Logout\r\n                </button>\r\n            </div>\r\n\r\n            <div className='journal__new-entry'\r\n                onClick = {handleAddNew}\r\n            >\r\n                <i className='far fa-calendar-plus fa-5x'></i>\r\n                <p className='mt-5'>New entry</p>\r\n            </div>\r\n            \r\n            <JournalEntries />\r\n            \r\n        </aside>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { NoteScreen } from '../notes/NoteScreen'\r\nimport { NothingSelected } from './NothingSelected'\r\nimport { Sidebar } from './Sidebar'\r\n\r\nexport const JournalScreen = () => {\r\n\r\n    const {active} = useSelector(state => state.notes)\r\n\r\n    return (\r\n        <div className = 'journal__main-content'>\r\n            <Sidebar />\r\n\r\n            <main>\r\n                {\r\n                    (active) ? (<NoteScreen/>) : (<NothingSelected/>)\r\n                }\r\n\r\n            </main>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch, useSelector} from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport {startGoogleLogin, startLoginEmailPassword } from '../../actions/auth'\r\nimport { useForm } from '../../hooks/useForm'\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const loading = useSelector(state => state.ui.loading)\r\n\r\n    const [{email,password}, handleInputChange] = useForm({\r\n        email: 'nando@gmail.com',\r\n        password: '1234'\r\n    })\r\n\r\n    const handleLogin = (e) =>{\r\n        e.preventDefault();\r\n        dispatch(startLoginEmailPassword(email,password))\r\n    } \r\n\r\n    const handleGoogleLogin = () => {\r\n        dispatch(startGoogleLogin())\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <h3 className='auth__title'>Login</h3>\r\n            <form onSubmit={handleLogin}>\r\n                <input \r\n                    className='auth__input'\r\n                    type ='text'\r\n                    placeholder='Email'\r\n                    name='email'\r\n                    autoComplete = 'off'\r\n                    value = {email}\r\n                    onChange = {handleInputChange}\r\n                />\r\n                <input\r\n                    className='auth__input'\r\n                    type ='password'\r\n                    placeholder='Password'\r\n                    name='password'\r\n                    value = {password}\r\n                    onChange = {handleInputChange}\r\n\r\n                />\r\n                <button \r\n                    className='btn btn-primary btn-block'\r\n                    type ='submit'\r\n                    disabled = {loading}\r\n                >Login</button>\r\n\r\n                <div className='auth__social-networks'>\r\n                    <p>Login with social networks </p>\r\n                    <div \r\n                        className=\"google-btn\" \r\n                        onClick={handleGoogleLogin}\r\n                    >                   \r\n                        <div className=\"google-icon-wrapper\">\r\n                            <img className=\"google-icon\" src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" alt=\"google button\" />\r\n                        </div>\r\n                        <p className=\"btn-text\">\r\n                            <b>Sign in with google</b>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n                <Link to='/auth/register' className='link'>\r\n                    Create new account\r\n                </Link>\r\n\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport validator from 'validator'\r\nimport { startRegisterWithEmailPasswordName } from '../../actions/auth'\r\nimport { removeError, setError } from '../../actions/ui'\r\nimport { useForm } from '../../hooks/useForm'\r\n\r\nexport const RegisterScreen = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const {msgError} = useSelector(state => state.ui)\r\n\r\n    const [{name,email,password,password2}, handleInputChange] = useForm({\r\n        name: 'Sergio',\r\n        email: 'nando@gmail.com',\r\n        password: '123456',\r\n        password2: '123456'\r\n    })\r\n\r\n    const handleRegister = (e)=>{\r\n        e.preventDefault();\r\n\r\n        if(isFormValid()){\r\n            dispatch(startRegisterWithEmailPasswordName(email,password,name))\r\n        }\r\n    }\r\n    const isFormValid = () =>{\r\n        if(name.trim().length === 0){\r\n            dispatch(setError('Error Nombre'))\r\n            return false\r\n        }else if(!validator.isEmail(email)){\r\n            dispatch(setError('Error Email'))\r\n            return false\r\n        }else if(password !== password2){\r\n            dispatch(setError('Error Paswod'))\r\n            return\r\n        }\r\n        dispatch(removeError('Error Email'))\r\n        return true\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <h3 className='auth__title'>Register</h3>\r\n            <form onSubmit = {handleRegister}>\r\n                {   \r\n                    (msgError !== null) &&\r\n                    <div className='auth__alert-error'>\r\n                        {msgError}\r\n                    </div>\r\n                }\r\n                <input \r\n                    className='auth__input'\r\n                    type ='text'\r\n                    placeholder='Name'\r\n                    name='name'\r\n                    autoComplete = 'off'\r\n                    value = {name}\r\n                    onChange = {handleInputChange}\r\n                />\r\n                <input \r\n                    className='auth__input'\r\n                    type ='text'\r\n                    placeholder='Email'\r\n                    name='email'\r\n                    autoComplete = 'off'\r\n                    value = {email}\r\n                    onChange = {handleInputChange}\r\n                />\r\n                <input\r\n                    className='auth__input'\r\n                    type ='password'\r\n                    placeholder='Password'\r\n                    name='password'\r\n                    value = {password}\r\n                    onChange = {handleInputChange}\r\n                />\r\n                <input\r\n                    className='auth__input'\r\n                    type ='password'\r\n                    placeholder='Confirm password'\r\n                    name='password2'\r\n                    value = {password2}\r\n                    onChange = {handleInputChange}\r\n                />\r\n                <button \r\n                    className='btn btn-primary btn-block mb-5'\r\n                    type ='submit'\r\n                >Register</button>\r\n\r\n                <Link to='/auth/login' className='link'>\r\n                    Already Registered?\r\n                </Link>\r\n\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Redirect, Route, Switch } from 'react-router'\r\nimport { LoginScreen } from '../components/auth/LoginScreen'\r\nimport { RegisterScreen } from '../components/auth/RegisterScreen'\r\n\r\nexport const AuthRouter = () => {\r\n    return (\r\n        <div className = 'auth__main'>\r\n            <div className = 'auth__box-contain'>\r\n                <Switch>\r\n                    <Route path = '/auth/login' component = {LoginScreen}/>\r\n                    <Route path = '/auth/register' component = {RegisterScreen} /> \r\n\r\n                    <Redirect to='/auth/login'/>\r\n                </Switch>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Redirect, Route } from 'react-router'\r\n\r\n\r\nexport const PrivateRoute = ({\r\n    isLoggedIn,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n    return (\r\n        <Route {...rest}\r\n            component = { (props) => (\r\n                (isLoggedIn) ? <Component {...props} />\r\n                             : <Redirect to = '/auth/login' />\r\n\r\n            )}/>\r\n    )\r\n}\r\nPrivateRoute.propTypes = {\r\n    isLoggedIn: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Redirect, Route } from 'react-router'\r\n\r\n\r\nexport const PublicRoute = ({\r\n    isLoggedIn,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n    return (\r\n        <Route {...rest} \r\n            component = { (props) =>(\r\n                (!isLoggedIn) ? <Component {...props} /> \r\n                             : <Redirect to='/'/>\r\n            )}\r\n        />\r\n    )\r\n}\r\nPublicRoute.propTypes = {\r\n    isLoggedIn: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import React, { useEffect, useState } from 'react'\r\nimport {BrowserRouter as Router,Redirect,Switch,} from \"react-router-dom\";\r\nimport {firebase} from '../firebase/firebaseConfig'\r\nimport { JournalScreen } from '../components/journal/JournalScreen'\r\nimport { AuthRouter } from './AuthRouter'\r\nimport { useDispatch } from 'react-redux';\r\nimport { login } from '../actions/auth';\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport { PublicRoute } from './PublicRoute';\r\nimport { starLoadingNotes } from '../actions/notes';\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [checking, setChecking] = useState(true)\r\n\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false)\r\n\r\n    useEffect(() => {\r\n        firebase.auth().onAuthStateChanged(async (user) =>{\r\n            if(user?.uid){\r\n                dispatch(login(user.uid, user.displayName))\r\n                setIsLoggedIn(true)\r\n\r\n                dispatch(starLoadingNotes(user.uid))\r\n\r\n            }else{\r\n                setIsLoggedIn(false)\r\n            }\r\n            setChecking(false)\r\n        })\r\n    }, [dispatch])\r\n    if(checking){\r\n        return(\r\n            <h1> Wait... </h1>\r\n        )\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n            <Router>\r\n                <div>  \r\n                    <Switch>\r\n                        <PublicRoute \r\n                            path = '/auth' \r\n                            component = {AuthRouter} \r\n                            isLoggedIn = {isLoggedIn}    \r\n                        />\r\n                        <PrivateRoute \r\n                            exact path = '/' \r\n                            component = {JournalScreen} \r\n                            isLoggedIn = {isLoggedIn }    \r\n                        />\r\n\r\n                        <Redirect to='/auth/login' />\r\n                    </Switch>\r\n                </div>\r\n            </Router>\r\n        </div>\r\n    )\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\n\r\n/*\r\n    {\r\n        notes: [],\r\n        active: null,\r\n        active:{\r\n            id: firebaseID,\r\n            title: '',\r\n            body: '',\r\n            imagenurl: '',\r\n            date:\r\n        }\r\n    }\r\n*/\r\nconst initialState = {\r\n    notes: [],\r\n    active: null,\r\n}\r\n\r\nexport const notesReducer = (state =  initialState,action) => {\r\n    switch (action.type) {\r\n        case types.notesActive:\r\n            return {\r\n                ...state,\r\n                active: {\r\n                    ...action.payload\r\n                }\r\n            }\r\n        case types.notesAddNew:\r\n            return {\r\n                ...state,\r\n                notes: [action.payload, ...state.notes]\r\n            }\r\n        case types.notesLoad:\r\n            return {\r\n                ...state,\r\n                notes: [...action.payload]\r\n            }\r\n        \r\n        case types.notesUpdated:\r\n            return {\r\n                ...state,\r\n                notes: state.notes.map(\r\n                    note => note.id === action.payload.id ? action.payload.note : note\r\n                )\r\n            }\r\n        case types.notesDelete:\r\n            return{\r\n                ...state,\r\n                active: null,\r\n                notes: state.notes.filter(\r\n                    note => note.id !== action.payload )\r\n            }\r\n        case  types.notesLogoutCleaning:\r\n            return initialState\r\n        \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    msgError : null\r\n}\r\n\r\nexport const uiReducer = (state = initialState,action) => {\r\n    switch (action.type) {\r\n        case types.uiSetError:\r\n            return{\r\n                ...state,\r\n                msgError: action.payload\r\n            }\r\n        case types.uiRemoveError:\r\n            return{\r\n                ...state,\r\n                msgError: null\r\n            }\r\n        case types.uiStartLoading:\r\n            return{\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case types.uiFinishLoading:\r\n            return{\r\n                ...state,\r\n                loading: false\r\n            }  \r\n        default:\r\n            return state\r\n    }\r\n}","import {createStore,combineReducers,applyMiddleware,compose} from 'redux'\r\nimport thunk from 'redux-thunk';\r\n\r\n\r\nimport { authReducer } from '../reducers/authReducer'\r\nimport { notesReducer } from '../reducers/notesReducer';\r\nimport { uiReducer } from '../reducers/uiReducer';\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nconst reducers = combineReducers({\r\n    auth: authReducer,\r\n    ui: uiReducer,\r\n    notes: notesReducer,\r\n})\r\n\r\n\r\n\r\nexport const store = createStore(\r\n    reducers,\r\n    composeEnhancers(\r\n        applyMiddleware(thunk)\r\n    )\r\n)","import { types } from \"../types/types\";\r\n\r\n\r\nexport const authReducer = (state = {}, action) =>{\r\n    switch (action.type) {\r\n        case types.login:\r\n            return {\r\n                uid: action.payload.uid,\r\n                name: action.payload.displayName\r\n            }\r\n        case types.logout:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import React from 'react'\r\nimport { AppRouter } from './routers/AppRouter'\r\nimport {Provider} from 'react-redux'\r\nimport { store } from './store/store'\r\n\r\nexport const JournalApp = () => {\r\n    return (\r\n        <Provider store={store}>\r\n            <AppRouter/>\r\n        </Provider>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/styles.scss'\n\nimport { JournalApp } from './JournalApp';\n\nReactDOM.render(\n  <JournalApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}